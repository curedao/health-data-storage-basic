create table measurements
(
    id                  bigint generated by default as identity
        primary key,
    user_id             uuid                                not null
        references users,
    client_id           varchar(80)                         not null,
    connector_id        integer,
    variable_id         integer                             not null,
    start_at            timestamp                           not null,
    end_at              timestamp                           not null,
    value               double precision                    not null,
    unit_id             smallint                            not null,
    original_value      double precision                    not null,
    original_unit_id    smallint                            not null,
    duration            integer,
    note                text,
    latitude            double precision,
    longitude           double precision,
    location            varchar(255),
    created_at          timestamp default CURRENT_TIMESTAMP not null,
    updated_at          timestamp default CURRENT_TIMESTAMP not null,
    error               text,
    deleted_at          timestamp,
    connection_id       integer,
    connector_import_id integer,
    deletion_reason     varchar(280),
    original_start_at   timestamp                           not null
);

comment on table measurements is 'Measurements are any value that can be recorded like a lab test result, daily steps, a mood rating, or apples eaten.';

alter table measurements
    owner to supabase_admin;

create policy "Allow logged-in read access" on measurements
    as permissive
    for select
    using (auth.role() = 'authenticated'::text);

create policy "Allow individual insert access" on measurements
    as permissive
    for insert
    with check (auth.uid() = user_id);

create policy "Allow individual update access" on measurements
    as permissive
    for update
    using (auth.uid() = user_id);

create policy "Allow individual delete access" on measurements
    as permissive
    for delete
    using (auth.uid() = user_id);

create policy "Allow authorized delete access" on measurements
    as permissive
    for delete
    using authorize('measurements.delete'::app_permission, auth.uid());

grant delete, insert, references, select, trigger, truncate, update on measurements to postgres;

grant delete, insert, references, select, trigger, truncate, update on measurements to anon;

grant delete, insert, references, select, trigger, truncate, update on measurements to authenticated;

grant delete, insert, references, select, trigger, truncate, update on measurements to service_role;

